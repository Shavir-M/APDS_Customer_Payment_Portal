name: OWASP ZAP Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security_scan:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Start a Web Application (replace this with your application)
      # Ensure your application runs correctly on the expected port
      - name: Start the Web Application
        run: |
          docker-compose up -d

      # Optional: Wait for the web application to be fully up
      - name: Wait for Web Application to be Ready
        run: sleep 20 # Adjust timing as necessary based on your app startup

      # Step 3: Run OWASP ZAP Baseline Scan (Minimal Scan)
      - name: OWASP ZAP Baseline Scan
        run: |
          docker run -v $(pwd):/zap/wrk/ -t owasp/zap2docker-stable zap-baseline.py -t http://localhost:8080 -r zap_report.html
        continue-on-error: true # Continue even if vulnerabilities are found

      # Step 4: Upload the OWASP ZAP report as an artifact
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: zap_report.html

      # Step 5: Fail the job if OWASP ZAP finds a threshold of Medium or High risk alerts
      - name: Fail if High Risk Alerts Found
        run: |
          alert_count=$(docker run -v $(pwd):/zap/wrk/ -t owasp/zap2docker-stable zap-cli --zap-url http://localhost:8080 --quiet alerts -l High | wc -l)
          if [ "$alert_count" -gt 0 ]; then
            echo "High risk alerts found: $alert_count"
            exit 1
          else
            echo "No High risk alerts found."
          fi
