name: Snyk Security

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  snyk:
    permissions:
      contents: read
      security-events: write
      actions: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Set up Node.js environment (only needed if your project uses Node.js)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Install dependencies for your project (only if needed)
      - name: Install Dependencies
        run: npm install

      # Set up Snyk CLI to check for security issues
      - name: Set up Snyk CLI
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Explicitly authenticate with Snyk using the token
      - name: Authenticate Snyk CLI
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      # Run Snyk Code (SAST) analysis and upload results to GitHub
      - name: Snyk Code test
        run: snyk code test --sarif-file-output=snyk-code.sarif || true

      # Run Snyk Open Source (SCA) analysis and upload results to Snyk
      - name: Snyk Open Source monitor
        run: snyk monitor --all-projects || true

      # Run Snyk Infrastructure as Code (IaC) analysis and upload results to Snyk
      - name: Snyk IaC test and report
        run: snyk iac test --report || true

      # Build the Docker image for testing
      - name: Build a Docker image
        run: docker build -t your/image-to-test -f path/to/Dockerfile .

      # Run Snyk Container analysis and upload results to Snyk
      - name: Snyk Container monitor
        run: snyk container monitor your/image-to-test --file=path/to/Dockerfile

      # Upload the Snyk Code results into the GitHub Code Scanning tab
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif
